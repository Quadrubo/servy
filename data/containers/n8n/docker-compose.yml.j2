services:
  n8n:
    image: docker.n8n.io/n8nio/n8n:latest
    container_name: n8n
    environment:
      - DB_TYPE=postgresdb
      - DB_POSTGRESDB_DATABASE=n8n
      - DB_POSTGRESDB_HOST=n8n-db
      - DB_POSTGRESDB_PORT=5432
      - DB_POSTGRESDB_USER=n8n
      - DB_POSTGRESDB_PASSWORD={{ n8n_postgres_password }}
      - WEBHOOK_URL=https://n8n.{{ docker_r_hostname }}
    volumes:
      - /mnt/storage/containers/n8n/data:/home/node/.n8n
    ports:
      - 5678:5678
    depends_on:
      n8n-db:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - net-n8n
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.n8n.rule=Host(`n8n.{{ docker_r_hostname }}`)"
      - "traefik.http.routers.n8n.entrypoints=websecure"
      - "traefik.http.routers.n8n.tls.certresolver=myresolver"

  n8n-db:
    image: postgres:16-alpine
    container_name: n8n-db
    environment:
      POSTGRES_DB: n8n
      POSTGRES_PASSWORD: {{ n8n_postgres_password }}
      POSTGRES_USER: n8n
    logging:
      driver: "none"
    restart: unless-stopped
    volumes:
      - /mnt/storage/containers/n8n-db/data:/var/lib/postgresql/data
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -h localhost -U n8n -d n8n']
      interval: 5s
      timeout: 5s
      retries: 10
    networks:
      - net-n8n

  # This instance is not in use by n8n itself
  # It is used for the workflows to store data in cache
  n8n-redis:
    image: redis:7.2.4-alpine
    container_name: n8n-redis
    restart: unless-stopped
    volumes:
      - /mnt/storage/containers/n8n-redis/data:/data
    networks:
      - net-n8n
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.n8n-redis.rule=Host(`n8n-redis.{{ docker_l_hostname }}`)"
      - "traefik.http.routers.n8n-redis.entrypoints=websecure"
      - "traefik.http.routers.n8n-redis.tls.certresolver=myresolver"

networks:
  net-n8n:
    name: n8n